<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chris Bracco</title>
    <description>Hello! My name is Chris and I am a web designer and engineer who cares about user-centered design, performance, and accessibility.</description>
    <link>https://chrisbracco.comhttps://chrisbracco.com/</link>
    <atom:link href="https://chrisbracco.comhttps://chrisbracco.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 21 Dec 2020 14:48:50 -0500</pubDate>
    <lastBuildDate>Mon, 21 Dec 2020 14:48:50 -0500</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>A Simple, Responsive CSS Grid System</title>
        <description>&lt;div class=&quot;codepen&quot;&gt;
  &lt;div data-height=&quot;450&quot; data-theme-id=&quot;23593&quot; data-slug-hash=&quot;hjFDL&quot; data-default-tab=&quot;result&quot; data-user=&quot;cbracco&quot; data-embed-version=&quot;1&quot; class=&quot;codepen&quot;&gt;&lt;/div&gt;
  &lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 13 Mar 2014 11:13:52 -0400</pubDate>
        <link>https://chrisbracco.comhttps://chrisbracco.com/a-simple-responsive-css-grid-system/</link>
        <guid isPermaLink="true">https://chrisbracco.comhttps://chrisbracco.com/a-simple-responsive-css-grid-system/</guid>
        
        
      </item>
    
      <item>
        <title>A Simple CSS Tooltip</title>
        <description>&lt;p&gt;With pseudo elements, the triangle hack, and data attributes, I created a simple tooltip system in HTML and CSS.&lt;/p&gt;

&lt;div class=&quot;codepen&quot;&gt;
  &lt;div data-height=&quot;380&quot; data-theme-id=&quot;23593&quot; data-slug-hash=&quot;qzukg&quot; data-default-tab=&quot;result&quot; data-user=&quot;cbracco&quot; data-embed-version=&quot;1&quot; class=&quot;codepen&quot;&gt;&lt;/div&gt;
  &lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;To give any element a tooltip, simply add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;data-tooltip&lt;/code&gt; attribute to it, like so:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#!&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-tooltip=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;I am a tooltip&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;I am a link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;One caveat with this method is that transitions on pseudo elements &lt;a href=&quot;http://css-tricks.com/transitions-and-animations-on-css-generated-content/&quot;&gt;don’t quite work right&lt;/a&gt; in Webkit browsers (Chrome, Safari). It works just fine in Firefox, but if you include the CSS for the transition it will break the tooltip in Webkit, which is annoying. This means you can’t transition the opacity or positioning of the tooltip for a fade or movement effect. But if you don’t care about that extra pizazz, then this method will work just fine.&lt;/p&gt;

&lt;h2 id=&quot;bonus&quot;&gt;Bonus!&lt;/h2&gt;

&lt;p&gt;Because boredom, I created a simple directional tooltip system. With class names, you can specify which side you would like the tooltip to appear (top, right, bottom, or left).&lt;/p&gt;

&lt;div class=&quot;codepen&quot;&gt;
  &lt;div data-height=&quot;700&quot; data-theme-id=&quot;23593&quot; data-slug-hash=&quot;nufHz&quot; data-default-tab=&quot;result&quot; data-user=&quot;cbracco&quot; data-embed-version=&quot;1&quot; class=&quot;codepen&quot;&gt;&lt;/div&gt;
  &lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 01 Oct 2013 13:00:36 -0400</pubDate>
        <link>https://chrisbracco.comhttps://chrisbracco.com/a-simple-css-tooltip/</link>
        <guid isPermaLink="true">https://chrisbracco.comhttps://chrisbracco.com/a-simple-css-tooltip/</guid>
        
        
      </item>
    
      <item>
        <title>CSS Sticky (But Not Fixed) Footer</title>
        <description>&lt;p&gt;For a recent web app project, I had to build a footer that would always stick to the bottom of page, using CSS only. My first instincts led me to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position: fixed;&lt;/code&gt; property, but it turns out the client didn’t want the footer visible at all times. They wanted it to behave as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The footer should be visible if the content above it is shorter than the user’s viewport height.&lt;/li&gt;
  &lt;li&gt;If the content is taller than the user’s viewport height, then the footer should disappear from view and rest at the bottom of the page, as it would naturally.&lt;/li&gt;
  &lt;li&gt;This must be done without JavaScript, and without using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position: fixed;&lt;/code&gt; property (which would keep the footer at the bottom of the viewport at all times, regardless of the above content).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below is a small pen demonstrating my solution, and it works fabulously. Feel free to use this method on your next project.&lt;/p&gt;

&lt;div class=&quot;codepen&quot;&gt;
  &lt;div data-height=&quot;500&quot; data-theme-id=&quot;23593&quot; data-slug-hash=&quot;zekgx&quot; data-default-tab=&quot;result&quot; data-user=&quot;cbracco&quot; data-embed-version=&quot;1&quot; class=&quot;codepen&quot;&gt;&lt;/div&gt;
  &lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h2 id=&quot;update-with-flexbox&quot;&gt;Update! With flexbox&lt;/h2&gt;

&lt;p&gt;Turns out you can also accomplish this particular layout with flexbox. The CSS is a lot simpler, too.&lt;/p&gt;

&lt;div class=&quot;codepen&quot;&gt;
  &lt;div data-height=&quot;500&quot; data-theme-id=&quot;23593&quot; data-slug-hash=&quot;BaLdqKp&quot; data-default-tab=&quot;result&quot; data-user=&quot;cbracco&quot; data-embed-version=&quot;1&quot; class=&quot;codepen&quot;&gt;&lt;/div&gt;
  &lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 26 Sep 2013 11:28:05 -0400</pubDate>
        <link>https://chrisbracco.comhttps://chrisbracco.com/css-sticky-footer-effect/</link>
        <guid isPermaLink="true">https://chrisbracco.comhttps://chrisbracco.com/css-sticky-footer-effect/</guid>
        
        
      </item>
    
      <item>
        <title>Simple CSS3 Collapsing Header Effect</title>
        <description>&lt;p&gt;I wanted a non-JavaScript solution to make a full-width header image appear as though it was collapsing, with content below traveling above the image as the user scrolls. This is what I came up with after a few minutes of tweaking.&lt;/p&gt;

&lt;div class=&quot;codepen&quot;&gt;
  &lt;div data-height=&quot;450&quot; data-theme-id=&quot;23593&quot; data-slug-hash=&quot;corFl&quot; data-default-tab=&quot;result&quot; data-user=&quot;cbracco&quot; data-embed-version=&quot;1&quot; class=&quot;codepen&quot;&gt;&lt;/div&gt;
  &lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 11 Jun 2013 14:56:32 -0400</pubDate>
        <link>https://chrisbracco.comhttps://chrisbracco.com/simple-css3-collapsing-header-effect/</link>
        <guid isPermaLink="true">https://chrisbracco.comhttps://chrisbracco.com/simple-css3-collapsing-header-effect/</guid>
        
        
      </item>
    
      <item>
        <title>How to Use Curly Quotes on Mac OSX and Windows</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/images/posts/curly-quotes.png&quot; alt=&quot;curly smart quotes&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The curly, or smart quote is an elusive character. For years I have been including straight marks in my writing, blissfully unaware of their curly counterparts. Recently, I learned about some functional differences between straight and curly quotation marks.&lt;/p&gt;

&lt;h2 id=&quot;straight-marks&quot;&gt;Straight marks&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/typewriter.gif&quot; alt=&quot;typewriter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Straight marks were invented for use on typewriters. Due to physical and mechanical constraints, you can only fit so many keys on a typewriter’s keyboard. Using straight quotes instead of curly quotes freed up two slots for other characters on the keyboard, which is why these characters were preferable.&lt;/p&gt;

&lt;p&gt;When computers came into the fray, they put these straight marks to good use. Most programming languages require the use of straight marks to indicate string literals (e.g. “Hello world”), so they are still very useful today.&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;
&lt;p&gt;On any typical keyboard, simply press &lt;kbd&gt;'&lt;/kbd&gt; for a straight single mark ( ‘ ) and &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;'&lt;/kbd&gt; for a straight double mark ( “ ).&lt;/p&gt;

&lt;h2 id=&quot;curly-quotes&quot;&gt;Curly quotes&lt;/h2&gt;
&lt;p&gt;Unlike straight marks, curly quotes are usually more legible in paragraphs and long texts, and match the other characters better. They are more suitable for reading, and should be used when writing documents, articles, blog posts, etc.&lt;/p&gt;

&lt;h3 id=&quot;usage-1&quot;&gt;Usage&lt;/h3&gt;
&lt;p&gt;It turns out that producing curly quotes on a computer is super easy. I’ve committed these simple shortcuts to memory.&lt;/p&gt;

&lt;h4 id=&quot;mac-osx&quot;&gt;Mac OSX&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;]&lt;/kbd&gt; produces an opening single curly quote ( &lt;strong&gt;‘&lt;/strong&gt; )&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;]&lt;/kbd&gt; produces a closing single curly quote ( &lt;strong&gt;’&lt;/strong&gt; )&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;[&lt;/kbd&gt; produces an opening double curly quote ( &lt;strong&gt;“&lt;/strong&gt; )&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;[&lt;/kbd&gt; produces a closing double curly quote ( &lt;strong&gt;”&lt;/strong&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;windows&quot;&gt;Windows&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;0145&lt;/kbd&gt; produces an opening single curly quote ( &lt;strong&gt;‘&lt;/strong&gt; )&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;0146&lt;/kbd&gt; produces a closing single curly quote ( &lt;strong&gt;’&lt;/strong&gt; )&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;0147&lt;/kbd&gt; produces an opening double curly quote ( &lt;strong&gt;“&lt;/strong&gt; )&lt;/li&gt;
  &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt; + &lt;kbd&gt;0148&lt;/kbd&gt; produces a closing double curly quote ( &lt;strong&gt;”&lt;/strong&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;converting-straight-marks-to-curly-quotes&quot;&gt;Converting straight marks to curly quotes&lt;/h2&gt;

&lt;p&gt;Some word processors like &lt;a href=&quot;https://en.wikipedia.org/wiki/Microsoft_Word&quot;&gt;Microsoft Word&lt;/a&gt; will automatically convert straight marks to curly quotes for you on the fly, as you type. However, if you copy and paste text that includes straight marks into a word processor, it may not always convert the straight marks properly.&lt;/p&gt;

&lt;p&gt;To manually convert straight marks to curly quotes within your word processor, simply use the &lt;strong&gt;search and replace&lt;/strong&gt; function to find all instances of the straight single quote ( ‘ ) and replace it with the same character — a straight single quote ( ‘ ). You can do the same for straight double marks ( “ ) too.&lt;/p&gt;

&lt;p&gt;I’m not sure why, but it works.&lt;/p&gt;

&lt;h2 id=&quot;who-cares&quot;&gt;Who cares?&lt;/h2&gt;

&lt;p&gt;These small details in your writing will go unnoticed by most, no doubt. Snobby typographers, bookworms, and other designers and developers will be among the few who may actually notice. And maybe that significant other you dated back in 2006 who majored in creative writing.&lt;/p&gt;

&lt;p&gt;Either way, I like to believe that the devil is in the details. The subtleties of these pesky quotation marks is an interesting tidbit in type history worth rehashing.&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Feb 2013 20:44:05 -0500</pubDate>
        <link>https://chrisbracco.comhttps://chrisbracco.com/curly-quotes/</link>
        <guid isPermaLink="true">https://chrisbracco.comhttps://chrisbracco.com/curly-quotes/</guid>
        
        
      </item>
    
  </channel>
</rss>
